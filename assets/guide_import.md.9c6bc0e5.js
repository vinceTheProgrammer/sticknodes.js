import{_ as a,o as n,c as o,O as e}from"./chunks/framework.42999896.js";const E=JSON.parse('{"title":"Import","description":"","frontmatter":{},"headers":[],"relativePath":"guide/import.md","filePath":"guide/import.md"}'),l={name:"guide/import.md"};function p(t,s,r,c,i,y){return n(),o("div",null,s[0]||(s[0]=[e(`<h1 id="import" tabindex="-1">Import <a class="header-anchor" href="#import" aria-label="Permalink to &quot;Import&quot;">​</a></h1><h2 id="data-i-o" tabindex="-1">Data &amp; I/O <a class="header-anchor" href="#data-i-o" aria-label="Permalink to &quot;Data &amp; I/O&quot;">​</a></h2><p>In order to provide maximum compatibility, sticknodes.js does not handle the I/O of data. You will need to read/retrieve/write/send the Stick Nodes asset data yourself, but sticknodes.js enables you to deserialize, manipulate, and serialize that data.</p><p>Specifically, sticknodes.js expects the Stick Nodes asset data as either a <a href="https://developer.mozilla.org/en-US/docs/Web/API/Blob" target="_blank" rel="noreferrer">Blob</a> or an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">ArrayBuffer</a>, which are both available in most Javascript environments (most popular browsers &amp; Node.js).</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Blob had partial Node.js support since Node.js 15.7.0, but is only fully supported starting with Node.js 18.0.0</p></div><h2 id="import-a-stickfigure-from-nodes-file-data-using-an-arraybuffer" tabindex="-1">Import a Stickfigure from <code>.nodes</code> file data using an <code>ArrayBuffer</code> <a class="header-anchor" href="#import-a-stickfigure-from-nodes-file-data-using-an-arraybuffer" aria-label="Permalink to &quot;Import a Stickfigure from \`.nodes\` file data using an \`ArrayBuffer\`&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-W0UIb" id="tab-rzpwkjz" checked="checked"><label for="tab-rzpwkjz">js</label><input type="radio" name="group-W0UIb" id="tab-hFyyp4x"><label for="tab-hFyyp4x">ts</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Stickfigure } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;sticknodes.js&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">stickfigureDataArrayBuffer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ArrayBuffer</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// get this data however you like</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">myStickfigure</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Stickfigure.</span><span style="color:#B392F0;">fromBytes</span><span style="color:#E1E4E8;">(stickfigureDataArrayBuffer);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Stickfigure } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;sticknodes.js&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">stickfigureDataArrayBuffer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ArrayBuffer</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// get this data however you like</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">myStickfigure</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Stickfigure.</span><span style="color:#6F42C1;">fromBytes</span><span style="color:#24292E;">(stickfigureDataArrayBuffer);</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Stickfigure } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;sticknodes.js&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">stickfigureDataArrayBuffer</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ArrayBuffer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ArrayBuffer</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// get this data however you like</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">myStickfigure</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Stickfigure</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Stickfigure.</span><span style="color:#B392F0;">fromBytes</span><span style="color:#E1E4E8;">(stickfigureDataArrayBuffer);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Stickfigure } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;sticknodes.js&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">stickfigureDataArrayBuffer</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ArrayBuffer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ArrayBuffer</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// get this data however you like</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">myStickfigure</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Stickfigure</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Stickfigure.</span><span style="color:#6F42C1;">fromBytes</span><span style="color:#24292E;">(stickfigureDataArrayBuffer);</span></span></code></pre></div></div></div>`,7)]))}const f=a(l,[["render",p]]);export{E as __pageData,f as default};
