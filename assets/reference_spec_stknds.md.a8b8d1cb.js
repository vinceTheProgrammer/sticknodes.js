import{_ as t,o as e,c as d,Q as a}from"./chunks/framework.ec8f7e8e.js";const g=JSON.parse('{"title":".stknds File Format Specified","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"reference/spec/stknds.md","filePath":"reference/spec/stknds.md"}'),r={name:"reference/spec/stknds.md"},i=a('<h1 id="stknds-file-format-specified" tabindex="-1">.stknds File Format Specified <a class="header-anchor" href="#stknds-file-format-specified" aria-label="Permalink to &quot;.stknds File Format Specified&quot;">​</a></h1><h2 id="compression" tabindex="-1">Compression <a class="header-anchor" href="#compression" aria-label="Permalink to &quot;Compression&quot;">​</a></h2><p>The .stknds format is compressed when saved and decompressed when loaded to reduce its file size. It is compressed and decompressed using the GZIP compression and decompression algorithms with a buffer size of 4096. The following information assumes that the .stknds file is in its uncompressed state.</p><h2 id="file-format-overview" tabindex="-1">File Format Overview <a class="header-anchor" href="#file-format-overview" aria-label="Permalink to &quot;File Format Overview&quot;">​</a></h2><h2 id="header" tabindex="-1">Header <a class="header-anchor" href="#header" aria-label="Permalink to &quot;Header&quot;">​</a></h2><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>Any</td><td>Stick Nodes version number</td></tr><tr><td>5-8</td><td>32-bit signed int big-endian</td><td>&gt;=401</td><td>Build number</td></tr><tr><td>9-12</td><td>32-bit signed int big-endian</td><td>Any</td><td><span style="color:coral;">A</span> = Length of project name (prob causes weird behavior or error if length of project name length is &lt;= 0)</td></tr><tr><td>13-(<span style="color:coral;">A</span>+12)</td><td>sequence with size of <span style="color:coral;">A</span> of text bytes</td><td>Any</td><td>Project name</td></tr></tbody></table><h2 id="project-options" tabindex="-1">Project Options <a class="header-anchor" href="#project-options" aria-label="Permalink to &quot;Project Options&quot;">​</a></h2><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1</td><td>8-bit unsigned byte</td><td>&gt;=401</td><td>&gt;=16</td><td>Is YouTube short boolean</td></tr><tr><td>2</td><td>8-bit unsigned byte</td><td>&gt;=220</td><td>Any</td><td>Watermark enabled boolean</td></tr><tr><td>3-6</td><td>32-bit signed int big-endian</td><td>Any</td><td>Any</td><td><span style="color:coral;">B</span> = Length of watermark text (project name bytes are not read if this is &lt;= 0)</td></tr><tr><td>7-(<span style="color:coral;">B</span>+6)</td><td>sequence with size of <span style="color:coral;">B</span> of text bytes</td><td>Any</td><td>Any</td><td>Watermark text</td></tr><tr><td>(<span style="color:coral;">B</span>+6)+1-(<span style="color:coral;">B</span>+6)+4</td><td>32-bit signed int big-endian</td><td>Any</td><td>Any</td><td>Watermark color. See the <a href="/reference/spec/nodes.html#color">color reference</a> for more information.</td></tr><tr><td>(<span style="color:coral;">B</span>+6)+5-(<span style="color:coral;">B</span>+6)+8</td><td>32-bit signed int big-endian</td><td>Any</td><td>Any</td><td>FPS</td></tr><tr><td>(<span style="color:coral;">B</span>+6)+9-(<span style="color:coral;">B</span>+6)+12</td><td>32-bit signed int big-endian</td><td>&gt;=176</td><td>Any</td><td>Number of tweened frames</td></tr><tr><td>(<span style="color:coral;">B</span>+6)+13</td><td>8-bit unsigned byte</td><td>&gt;=127</td><td>Any</td><td>Has shown loop message boolean</td></tr><tr><td>(<span style="color:coral;">B</span>+6)+14</td><td>8-bit unsigned byte</td><td>&gt;=113</td><td>Any</td><td>Has shown panning mode message boolean</td></tr><tr><td>(<span style="color:coral;">B</span>+6)+15</td><td>8-bit unsigned byte</td><td>Any</td><td>Any</td><td>Has shown tweening mode message boolean</td></tr><tr><td>(<span style="color:coral;">B</span>+6)+16</td><td>8-bit unsigned byte</td><td>&gt;=220</td><td>Any</td><td>Has shown magnifier message boolean</td></tr><tr><td>(<span style="color:coral;">B</span>+6)+17</td><td>8-bit unsigned byte</td><td>Any</td><td>Any</td><td>Tweening enabled boolean</td></tr><tr><td>(<span style="color:coral;">B</span>+6)+18</td><td>8-bit unsigned byte</td><td>&gt;=127</td><td>Any</td><td>Is loop boolean</td></tr><tr><td>(<span style="color:coral;">B</span>+6)+19</td><td>8-bit unsigned byte</td><td>&gt;=140 &amp;&amp; &lt; 200</td><td>Any</td><td>[empty byte]</td></tr></tbody></table><h2 id="unique-ids" tabindex="-1">Unique IDs <a class="header-anchor" href="#unique-ids" aria-label="Permalink to &quot;Unique IDs&quot;">​</a></h2><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>Any</td><td>Any</td><td>Unique figure ID</td></tr><tr><td>5-8</td><td>32-bit signed int big-endian</td><td>&gt;=176</td><td>Any</td><td>Unique textfield box ID</td></tr><tr><td>9-12</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td>Unique movieclip ID</td></tr><tr><td>13-16</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td>Frames container UID</td></tr></tbody></table><h2 id="fonts" tabindex="-1">Fonts <a class="header-anchor" href="#fonts" aria-label="Permalink to &quot;Fonts&quot;">​</a></h2><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;=400</td><td>Any</td><td><span style="color:coral;">C</span> = Number of fonts to check if loaded?</td></tr><tr><td>5-(<span style="color:coral;">C</span>+4)</td><td>sequence with size of <span style="color:coral;">C</span> of 8-bit unsigned bytes (booleans)</td><td>&gt;=400</td><td>Any</td><td>Font loaded boolean?</td></tr></tbody></table><h2 id="hidden-library-ids" tabindex="-1">Hidden Library IDs <a class="header-anchor" href="#hidden-library-ids" aria-label="Permalink to &quot;Hidden Library IDs&quot;">​</a></h2><h3 id="hidden-stickfigure-library-ids" tabindex="-1">Hidden Stickfigure Library IDs <a class="header-anchor" href="#hidden-stickfigure-library-ids" aria-label="Permalink to &quot;Hidden Stickfigure Library IDs&quot;">​</a></h3><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td><span style="color:coral;">D</span> = Number of hidden stickfigure library IDs</td></tr><tr><td>5-(4<span style="color:coral;">D</span>+4)</td><td>sequence with size of <span style="color:coral;">D</span> of 32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td>Hidden stickfigure library ID</td></tr></tbody></table><h3 id="hidden-movieclip-library-ids" tabindex="-1">Hidden Movieclip Library IDs <a class="header-anchor" href="#hidden-movieclip-library-ids" aria-label="Permalink to &quot;Hidden Movieclip Library IDs&quot;">​</a></h3><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td><span style="color:coral;">E</span> = Number of hidden movieclip library IDs</td></tr><tr><td>5-(4<span style="color:coral;">E</span>+4)</td><td>sequence with size of <span style="color:coral;">E</span> of 32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td>Hidden movieclip library ID</td></tr></tbody></table><h3 id="hidden-sprite-library-ids" tabindex="-1">Hidden Sprite Library IDs <a class="header-anchor" href="#hidden-sprite-library-ids" aria-label="Permalink to &quot;Hidden Sprite Library IDs&quot;">​</a></h3><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td><span style="color:coral;">F</span> = Number of hidden sprite library IDs</td></tr><tr><td>5-(4<span style="color:coral;">F</span>+4)</td><td>sequence with size of <span style="color:coral;">F</span> of 32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td>Hidden sprite library ID</td></tr></tbody></table><h2 id="id-conversion-maps" tabindex="-1">ID Conversion Maps <a class="header-anchor" href="#id-conversion-maps" aria-label="Permalink to &quot;ID Conversion Maps&quot;">​</a></h2><h3 id="id-conversion-maps-header" tabindex="-1">ID Conversion Maps Header <a class="header-anchor" href="#id-conversion-maps-header" aria-label="Permalink to &quot;ID Conversion Maps Header&quot;">​</a></h3><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td><span style="color:coral;">G</span> = Outer loop iterations</td></tr><tr><td>5-((8<span style="color:coral;">G</span> + 8<span style="color:coral;">H</span> + 8<span style="color:coral;">I</span>) + 4)</td><td>sequence with size of <span style="color:coral;">G</span> of <a href="/reference/spec/stknds.html#ID-Conversion-Maps-Outer-Loop">outer loop data</a></td><td>&gt;=300</td><td>Any</td><td>See <a href="/reference/spec/stknds.html#ID-Conversion-Maps-Outer-Loop">outer loop data</a> for more information.</td></tr></tbody></table><h3 id="id-conversion-maps-outer-loop" tabindex="-1">ID Conversion Maps Outer Loop <a class="header-anchor" href="#id-conversion-maps-outer-loop" aria-label="Permalink to &quot;ID Conversion Maps Outer Loop&quot;">​</a></h3><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td><span style="color:coral;">H</span> = Middle loop iterations</td></tr><tr><td>5-8</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td>Destination container (timeline) UID</td></tr><tr><td>9-((8<span style="color:coral;">H</span> + 8<span style="color:coral;">I</span>) + 8)</td><td>sequence with size of <span style="color:coral;">H</span> of <a href="/reference/spec/stknds.html#ID-Conversion-Maps-Middle-Loop">middle loop data</a></td><td>&gt;=300</td><td>Any</td><td>See <a href="/reference/spec/stknds.html#ID-Conversion-Maps-Middle-Loop">middle loop data</a> for more information.</td></tr></tbody></table><h3 id="id-conversion-maps-middle-loop" tabindex="-1">ID Conversion Maps Middle Loop <a class="header-anchor" href="#id-conversion-maps-middle-loop" aria-label="Permalink to &quot;ID Conversion Maps Middle Loop&quot;">​</a></h3><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td><span style="color:coral;">I</span> = Inner loop iterations</td></tr><tr><td>5-8</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td>Source container (timeline) UID</td></tr><tr><td>9-(8<span style="color:coral;">I</span> + 8)</td><td>sequence with size of <span style="color:coral;">I</span> of <a href="/reference/spec/stknds.html#ID-Conversion-Maps-Inner-Loop">inner loop data</a></td><td>&gt;=300</td><td>Any</td><td>See <a href="/reference/spec/stknds.html#ID-Conversion-Maps-Inner-Loop">inner loop data</a> for more information.</td></tr></tbody></table><h3 id="id-conversion-maps-inner-loop" tabindex="-1">ID Conversion Maps Inner Loop <a class="header-anchor" href="#id-conversion-maps-inner-loop" aria-label="Permalink to &quot;ID Conversion Maps Inner Loop&quot;">​</a></h3><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td>Source container figure ID</td></tr><tr><td>5-8</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td>Destination container figure ID</td></tr></tbody></table><h2 id="background-image-do-later-since-it-won-t-effect-the-project-as-long-as-it-s-saved-as-400-or-newer-todo" tabindex="-1">Background Image (do later since it won&#39;t effect the project as long as it&#39;s saved as 400 or newer) TODO <a class="header-anchor" href="#background-image-do-later-since-it-won-t-effect-the-project-as-long-as-it-s-saved-as-400-or-newer-todo" aria-label="Permalink to &quot;Background Image (do later since it won&#39;t effect the project as long as it&#39;s saved as 400 or newer) TODO&quot;">​</a></h2><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1</td><td>8-bit unsigned byte</td><td>&gt;=140 &amp;&amp; &lt;400</td><td>Any</td><td>Background image enabled boolean ()</td></tr></tbody></table><h2 id="libraries" tabindex="-1">Libraries <a class="header-anchor" href="#libraries" aria-label="Permalink to &quot;Libraries&quot;">​</a></h2><h3 id="stickfigure-library" tabindex="-1">Stickfigure Library <a class="header-anchor" href="#stickfigure-library" aria-label="Permalink to &quot;Stickfigure Library&quot;">​</a></h3><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>Any</td><td>Any</td><td><span style="color:coral;">J</span> = Number of stickfigures in library</td></tr><tr><td>5-(?<span style="color:coral;">J</span> + 4)</td><td>sequence of <a href="/reference/spec/stknds.html#stickfigure-header">stickfigure header</a></td><td>Any</td><td>Any</td><td>See <a href="/reference/spec/stknds.html#stickfigure-header">stickfigure header</a> for more information.</td></tr></tbody></table><h4 id="stickfigure-header" tabindex="-1">Stickfigure Header <a class="header-anchor" href="#stickfigure-header" aria-label="Permalink to &quot;Stickfigure Header&quot;">​</a></h4><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>Any</td><td>Any</td><td><span style="color:coral;">K</span> = Length of stickfigure name</td></tr><tr><td>5-(<span style="color:coral;">K</span> + 4)</td><td>sequence with size of <span style="color:coral;">K</span> of text bytes</td><td>Any</td><td>Any</td><td>Stickfigure name</td></tr><tr><td>(<span style="color:coral;">K</span> + 5)-((<span style="color:coral;">K</span> + 4) + ?)</td><td><a href="/reference/spec/nodes.html">stickfigure data</a></td><td>Any</td><td>Any</td><td>See <a href="/reference/spec/nodes.html">stickfigure data</a> for more information.</td></tr></tbody></table><h3 id="sound-library" tabindex="-1">Sound Library <a class="header-anchor" href="#sound-library" aria-label="Permalink to &quot;Sound Library&quot;">​</a></h3><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;=160</td><td>Any</td><td><span style="color:coral;">L</span> = Number of sounds</td></tr><tr><td>5-(?<span style="color:coral;">L</span> + 4)</td><td>sequence with size of <span style="color:coral;">L</span> of <a href="/reference/spec/stknds.html#sound-header">sound name</a></td><td>&gt;=160</td><td>Any</td><td>See <a href="/reference/spec/stknds.html#sound-header">sound name</a> for more information.</td></tr></tbody></table><h4 id="sound-header" tabindex="-1">Sound Header <a class="header-anchor" href="#sound-header" aria-label="Permalink to &quot;Sound Header&quot;">​</a></h4><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;=160</td><td>Any</td><td><span style="color:coral;">M</span> = Length of sound name</td></tr><tr><td>5-(<span style="color:coral;">M</span> + 4)</td><td>sequence with size of <span style="color:coral;">M</span> of text bytes</td><td>&gt;=160</td><td>Any</td><td>Sound name</td></tr></tbody></table><h3 id="sprite-library" tabindex="-1">Sprite Library <a class="header-anchor" href="#sprite-library" aria-label="Permalink to &quot;Sprite Library&quot;">​</a></h3><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;=400</td><td>Any</td><td><span style="color:coral;">N</span> = Number of sprites</td></tr><tr><td>5-(?<span style="color:coral;">N</span> + 4)</td><td>sequence with size of <span style="color:coral;">N</span> of <a href="/reference/spec/stknds.html#sprite-header">sprite header</a></td><td>&gt;=400</td><td>Any</td><td>See <a href="/reference/spec/stknds.html#sprite-header">sprite header</a> for more information</td></tr></tbody></table><h4 id="sprite-header" tabindex="-1">Sprite Header <a class="header-anchor" href="#sprite-header" aria-label="Permalink to &quot;Sprite Header&quot;">​</a></h4><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1</td><td>8-bit unsigned byte</td><td>&gt;=400</td><td>Any</td><td><span style="color:cornflowerblue;">if 1: </span><span style="color:coral;">O</span> = sprite group source <span style="color:cornflowerblue;">else if 0: </span> <span style="color:coral;">O</span> = sprite source</td></tr><tr><td>2-5</td><td>32-bit signed int big-endian</td><td>&gt;=400</td><td>Any</td><td><span style="color:coral;">P</span> = Length of sprite name</td></tr><tr><td>6-(<span style="color:coral;">P</span> + 5)</td><td>sequence with size of <span style="color:coral;">P</span> of text bytes</td><td>&gt;=400</td><td>Any</td><td>Sprite name</td></tr><tr><td>(<span style="color:coral;">P</span> + 6)-?</td><td><span style="color:cornflowerblue;">if <span style="color:coral;">O</span> == sprite group source: </span>sequence with size of <span style="color:coral;">P</span> of <a href="/">sprite group library data</a><br> <span style="color:cornflowerblue;">else if <span style="color:coral;">O</span> == sprite source: </span> sequence with size of <span style="color:coral;">P</span> of <a href="/">sprite library data</a></td><td>&gt;=400</td><td>Any</td><td>See <a href="/">sprite group library data</a> or <a href="/">sprite library data</a> for more information.</td></tr></tbody></table><h4 id="sprite-group-library-data" tabindex="-1">Sprite Group Library Data <a class="header-anchor" href="#sprite-group-library-data" aria-label="Permalink to &quot;Sprite Group Library Data&quot;">​</a></h4><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;=400</td><td>Any</td><td><span style="color:coral;">Q</span> = Number of sprite group state library IDs</td></tr><tr><td>5-(4<span style="color:coral;">Q</span> + 4)</td><td>sequence with size of <span style="color:coral;">Q</span> of 32-bit signed int big-endian</td><td>&gt;=400</td><td>Any</td><td>Sprite group state library ID</td></tr></tbody></table><h4 id="sprite-library-data" tabindex="-1">Sprite Library Data <a class="header-anchor" href="#sprite-library-data" aria-label="Permalink to &quot;Sprite Library Data&quot;">​</a></h4><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1</td><td>8-bit unsigned byte</td><td>&gt;=400</td><td>Any</td><td>Sprite is transparent boolean</td></tr><tr><td>2</td><td>8-bit unsigned byte</td><td>&gt;=400</td><td>Any</td><td>Sprite is anti-alias boolean</td></tr><tr><td>3-6</td><td>32-bit float big-endian</td><td>&gt;=400</td><td>Any</td><td>Sprite default origin X</td></tr><tr><td>7-10</td><td>32-bit float big-endian</td><td>&gt;=400</td><td>Any</td><td>Sprite default origin Y</td></tr><tr><td>11-14</td><td>32-bit float big-endian</td><td>&gt;=400</td><td>Any</td><td>Sprite internal scale X</td></tr><tr><td>15-18</td><td>32-bit float big-endian</td><td>&gt;=400</td><td>Any</td><td>Sprite internal scale Y</td></tr><tr><td>19</td><td>8-bit unsigned byte</td><td>&gt;=401</td><td>&gt;=9</td><td>Sprite has raw rgb data boolean</td></tr><tr><td>20-23</td><td>32-bit signed int big-endian</td><td>&gt;=400</td><td>Any</td><td>Sprite image width</td></tr><tr><td>24-27</td><td>32-bit signed int big-endian</td><td>&gt;=400</td><td>Any</td><td>Sprite image height</td></tr><tr><td>20-23</td><td>32-bit signed int big-endian</td><td>&gt;=400</td><td>Any</td><td><span style="color:coral;">R</span> = Number of raw RGBA8888 bytes</td></tr><tr><td>24-(4<span style="color:coral;">R</span> + 23)</td><td>sequence with size of <span style="color:coral;">R</span> of <a href="/">RGBA8888 bytes</a></td><td>&gt;=400</td><td>Any</td><td>See <a href="/">RGBA8888 bytes</a> for more information.</td></tr></tbody></table><h3 id="movieclip-library" tabindex="-1">Movieclip Library <a class="header-anchor" href="#movieclip-library" aria-label="Permalink to &quot;Movieclip Library&quot;">​</a></h3><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td><span style="color:coral;">S</span> = Number of movieclips</td></tr><tr><td>5-(?<span style="color:coral;">S</span> + 4)</td><td>sequence with size of <span style="color:coral;">S</span> of <a href="/reference/spec/stknds.html#movieclip-header">movieclip header</a></td><td>&gt;=300</td><td>Any</td><td>See <a href="/reference/spec/stknds.html#movieclip-header">movieclip header</a> for more information.</td></tr></tbody></table><h4 id="movieclip-header" tabindex="-1">Movieclip Header <a class="header-anchor" href="#movieclip-header" aria-label="Permalink to &quot;Movieclip Header&quot;">​</a></h4><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td><span style="color:coral;">T</span> = Length of movieclip name</td></tr><tr><td>6-(<span style="color:coral;">T</span> + 5)</td><td>sequence with size of <span style="color:coral;">T</span> of text bytes</td><td>&gt;=300</td><td>Any</td><td>Movieclip name</td></tr><tr><td>(<span style="color:coral;">T</span> + 6)-((<span style="color:coral;">T</span> + 5) + ?)</td><td>sequence with size of <span style="color:coral;">T</span> of <a href="/reference/spec/stknds.html#movieclip-library-data">movieclip library data</a></td><td>&gt;=300</td><td>Any</td><td>See <a href="/reference/spec/stknds.html#movieclip-library-data">movieclip library data</a> for more information.</td></tr><tr><td>?-?</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td>Movieclip UID</td></tr></tbody></table><h4 id="movieclip-library-data" tabindex="-1">Movieclip Library Data <a class="header-anchor" href="#movieclip-library-data" aria-label="Permalink to &quot;Movieclip Library Data&quot;">​</a></h4><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td><span style="color:coral;">U</span> = Number of frames</td></tr><tr><td>5-8</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td>Movieclip FPS</td></tr><tr><td>9-12</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td>Movieclip number of tweened frames</td></tr><tr><td>13</td><td>8-bit unsigned byte</td><td>&gt;=300</td><td>Any</td><td>Movieclip tweening enabled boolean</td></tr><tr><td>14</td><td>8-bit unsigned byte</td><td>&gt;=300</td><td>Any</td><td>Movieclip tween loop protection enabled boolean</td></tr><tr><td>15-18</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td>Movieclip unique figure ID</td></tr><tr><td>19-(?<span style="color:coral;">U</span> + 18)</td><td>sequence with size of <span style="color:coral;">U</span> of <a href="/">movieclip frame data</a></td><td>&gt;=300</td><td>Any</td><td>See <a href="/">movieclip frame data</a> for more information.</td></tr></tbody></table><h5 id="movieclip-frame-data" tabindex="-1">Movieclip Frame Data <a class="header-anchor" href="#movieclip-frame-data" aria-label="Permalink to &quot;Movieclip Frame Data&quot;">​</a></h5><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit float big-endian</td><td>&gt;=300</td><td>Any</td><td>Frame sound volume</td></tr><tr><td>5-8</td><td>32-bit float big-endian</td><td>&gt;=310</td><td>Any</td><td>Frame sound pan</td></tr><tr><td>9-12</td><td>32-bit float big-endian</td><td>&gt;=310</td><td>Any</td><td>Frame sound pitch</td></tr><tr><td>13-16</td><td>32-bit float big-endian</td><td>&gt;=300</td><td>Any</td><td>Frame sound library ID</td></tr><tr><td>17-20</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td><span style="color:coral;">V</span> =</td></tr><tr><td>21-(?<span style="color:coral;">V</span> + 20)</td><td>sequence with size of <span style="color:coral;">V</span> of <a href="/">movieclip frame asset data</a></td><td>&gt;=300</td><td>Any</td><td>See <a href="/">movieclip frame asset data</a> for more information.</td></tr></tbody></table><h5 id="movieclip-frame-asset-data" tabindex="-1">Movieclip Frame Asset Data <a class="header-anchor" href="#movieclip-frame-asset-data" aria-label="Permalink to &quot;Movieclip Frame Asset Data&quot;">​</a></h5><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;=400</td><td>Any</td><td><span style="color:coral;">W</span> = asset type. (0 = stickfigure, 3 = sprite group, 2 = sprite)</td></tr><tr><td>5-?</td><td><span style="color:cornflowerblue;">if <span style="color:coral;">W</span> == 0: </span><a href="/">movieclip frame stickfigure</a><br><span style="color:cornflowerblue;">else if <span style="color:coral;">W</span> == 3: </span><a href="/">movieclip frame sprite group</a><br><span style="color:cornflowerblue;">else if <span style="color:coral;">W</span> == 2: </span><a href="/">movieclip frame sprite</a></td><td>&gt;=300</td><td>Any</td><td>See <a href="/">movieclip frame stickfigure</a>, <a href="/">movieclip frame sprite group</a>, or <a href="/">movieclip frame sprite</a> for more information.</td></tr></tbody></table><h6 id="movieclip-frame-stickfigure" tabindex="-1">Movieclip Frame Stickfigure <a class="header-anchor" href="#movieclip-frame-stickfigure" aria-label="Permalink to &quot;Movieclip Frame Stickfigure&quot;">​</a></h6><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td>Library stickfigure ID</td></tr></tbody></table><h6 id="stickfigure-positional-data" tabindex="-1">Stickfigure Positional Data <a class="header-anchor" href="#stickfigure-positional-data" aria-label="Permalink to &quot;Stickfigure Positional Data&quot;">​</a></h6><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>Any</td><td>Any</td><td>Stickfigure ID</td></tr><tr><td>5-8</td><td>32-bit float big-endian</td><td>Any</td><td>Any</td><td>Stickfigure scale</td></tr><tr><td>9-12</td><td>32-bit float big-endian</td><td>&gt;=220</td><td>Any</td><td>Stickfigure transparency</td></tr><tr><td>13-16</td><td>32-bit float big-endian</td><td>&gt;=220</td><td>Any</td><td>Blur</td></tr><tr><td>17</td><td>8-bit unsigned byte</td><td>&gt;=401</td><td>&gt;=16</td><td>Is motion blur boolean</td></tr><tr><td>18</td><td>8-bit unsigned byte</td><td>&gt;=401</td><td>&gt;=16</td><td>Motion blur is one direction boolean</td></tr><tr><td>19-22</td><td>32-bit signed int big-endian</td><td>&gt;=401</td><td>&gt;=16</td><td>d,nvsakf</td></tr></tbody></table><h6 id="sprite-group-positional-data" tabindex="-1">Sprite Group Positional Data <a class="header-anchor" href="#sprite-group-positional-data" aria-label="Permalink to &quot;Sprite Group Positional Data&quot;">​</a></h6><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead></table><h6 id="sprite-positional-data" tabindex="-1">Sprite Positional Data <a class="header-anchor" href="#sprite-positional-data" aria-label="Permalink to &quot;Sprite Positional Data&quot;">​</a></h6><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead></table><h6 id="movieclip-frame-sprite-group" tabindex="-1">Movieclip Frame Sprite Group <a class="header-anchor" href="#movieclip-frame-sprite-group" aria-label="Permalink to &quot;Movieclip Frame Sprite Group&quot;">​</a></h6><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td>Library sprite group ID</td></tr></tbody></table><h6 id="movieclip-frame-sprite" tabindex="-1">Movieclip Frame Sprite <a class="header-anchor" href="#movieclip-frame-sprite" aria-label="Permalink to &quot;Movieclip Frame Sprite&quot;">​</a></h6><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;=300</td><td>Any</td><td>Library sprite ID</td></tr></tbody></table><h2 id="frames" tabindex="-1">Frames <a class="header-anchor" href="#frames" aria-label="Permalink to &quot;Frames&quot;">​</a></h2><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>Any</td><td>Any</td><td><span style="color:coral;">??</span> = Number of frames in project</td></tr><tr><td>5-(?<span style="color:coral;">??</span> + 4)</td><td>sequence of <a href="/reference/spec/stknds.html#frame-data">frame data</a></td><td>Any</td><td>Any</td><td>See <a href="/reference/spec/stknds.html#frame-data">frame data</a> for more information.</td></tr></tbody></table><h3 id="frame-data" tabindex="-1">Frame Data <a class="header-anchor" href="#frame-data" aria-label="Permalink to &quot;Frame Data&quot;">​</a></h3><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead></table><h4 id="positional-frame-data" tabindex="-1">Positional Frame Data <a class="header-anchor" href="#positional-frame-data" aria-label="Permalink to &quot;Positional Frame Data&quot;">​</a></h4><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead></table><h4 id="" tabindex="-1">??? <a class="header-anchor" href="#" aria-label="Permalink to &quot;???&quot;">​</a></h4><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead></table><h4 id="frame-textfield-data" tabindex="-1">Frame Textfield Data <a class="header-anchor" href="#frame-textfield-data" aria-label="Permalink to &quot;Frame Textfield Data&quot;">​</a></h4><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead></table><h5 id="textfield-data" tabindex="-1">Textfield Data <a class="header-anchor" href="#textfield-data" aria-label="Permalink to &quot;Textfield Data&quot;">​</a></h5><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead></table><h4 id="frame-camera-data" tabindex="-1">Frame Camera Data <a class="header-anchor" href="#frame-camera-data" aria-label="Permalink to &quot;Frame Camera Data&quot;">​</a></h4><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit float big-endian</td><td>&gt;=170</td><td>Any</td><td>Camera scale</td></tr><tr><td>5-8</td><td>32-bit float big-endian</td><td>&gt;=170</td><td>Any</td><td>Camera offset X (gets multiplied by App.assetScaling)</td></tr><tr><td>9-12</td><td>32-bit float big-endian</td><td>&gt;=170</td><td>Any</td><td>Camera offset Y (gets multiplied by App.assetScaling)</td></tr><tr><td>13-16</td><td>32-bit float big-endian</td><td>&gt;=230</td><td>Any</td><td>Rotation (degrees)</td></tr><tr><td>17</td><td>8-bit unsigned byte</td><td>&gt;=310</td><td>Any</td><td>Is wobbling XY boolean</td></tr><tr><td>18</td><td>8-bit unsigned byte</td><td>&gt;=310</td><td>Any</td><td>Is wobbling rotation boolean</td></tr><tr><td>19</td><td>8-bit unsigned byte</td><td>&gt;=310</td><td>Any</td><td>Is wobble scale enabled boolean</td></tr><tr><td>20-23</td><td>32-bit signed int big-endian</td><td>&gt;=310</td><td>Any</td><td>Wobble XY intensity</td></tr><tr><td>24-27</td><td>32-bit float big-endian</td><td>&gt;=170</td><td>Any</td><td>Wobble rotation intensity</td></tr><tr><td>28-31</td><td>32-bit float big-endian</td><td>&gt;=170</td><td>Any</td><td>Wobble speed</td></tr><tr><td>?</td><td>8-bit unsigned byte</td><td>&gt;=230 &amp;&amp; &lt;=kjdknclNJSCLqijfewiOIDJ</td><td></td><td>😦</td></tr></tbody></table><h5 id="positional-stickfigure-data" tabindex="-1">Positional Stickfigure Data <a class="header-anchor" href="#positional-stickfigure-data" aria-label="Permalink to &quot;Positional Stickfigure Data&quot;">​</a></h5><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead></table><h5 id="positional-movieclip-data" tabindex="-1">Positional Movieclip Data <a class="header-anchor" href="#positional-movieclip-data" aria-label="Permalink to &quot;Positional Movieclip Data&quot;">​</a></h5><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead></table><h5 id="positional-sprite-group-data" tabindex="-1">Positional Sprite Group Data <a class="header-anchor" href="#positional-sprite-group-data" aria-label="Permalink to &quot;Positional Sprite Group Data&quot;">​</a></h5><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead></table><h5 id="positional-sprite-data" tabindex="-1">Positional Sprite Data <a class="header-anchor" href="#positional-sprite-data" aria-label="Permalink to &quot;Positional Sprite Data&quot;">​</a></h5><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead></table><h2 id="auto-camera" tabindex="-1">Auto Camera <a class="header-anchor" href="#auto-camera" aria-label="Permalink to &quot;Auto Camera&quot;">​</a></h2><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;=237</td><td>Any</td><td><span style="color:coral;">???</span> = Number of auto-cams</td></tr><tr><td>5-(?<span style="color:coral;">???</span> + 4)</td><td>sequence with size of <span style="color:coral;">???</span> of <a href="/reference/spec/stknds.html#auto-camera-data">auto camera data</a></td><td>&gt;=237</td><td>Any</td><td>See <a href="/reference/spec/stknds.html#auto-camera-data">auto camera data</a> for more information.</td></tr></tbody></table><h3 id="auto-camera-data" tabindex="-1">Auto Camera Data <a class="header-anchor" href="#auto-camera-data" aria-label="Permalink to &quot;Auto Camera Data&quot;">​</a></h3><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;=237</td><td>Any</td><td>Frame 1 (auto-cam start frame I think)</td></tr><tr><td>5-8</td><td>32-bit signed int big-endian</td><td>&gt;=237</td><td>Any</td><td>Frame 2 (auto-cam end frame I think)</td></tr><tr><td>9</td><td>8-bit unsigned byte</td><td>&gt;=237</td><td>Any</td><td>Is ease in boolean</td></tr><tr><td>10</td><td>8-bit unsigned byte</td><td>&gt;=237</td><td>Any</td><td>Is ease out boolean</td></tr><tr><td>13-14</td><td>16-bit signed int (short) big-endian</td><td>&gt;=256</td><td>Any</td><td>Interpolation ID</td></tr></tbody></table><h3 id="session-save-data" tabindex="-1">Session Save Data <a class="header-anchor" href="#session-save-data" aria-label="Permalink to &quot;Session Save Data&quot;">​</a></h3><table><thead><tr><th>Byte Range</th><th>Data Type</th><th>Versions</th><th>Builds</th><th>Description</th></tr></thead><tbody><tr><td>1-4</td><td>32-bit signed int big-endian</td><td>&gt;251</td><td>Any</td><td>Frame index</td></tr><tr><td>5-8</td><td>32-bit float big-endian</td><td>&gt;251</td><td>Any</td><td>Guideline X (gets multiplied by App.assetScaling)</td></tr><tr><td>9-12</td><td>32-bit float big-endian</td><td>&gt;251</td><td>Any</td><td>Guideline Y (gets multiplied by App.assetScaling)</td></tr><tr><td>13-16</td><td>32-bit float big-endian</td><td>&gt;251</td><td>Any</td><td>Zoom</td></tr><tr><td>17-20</td><td>32-bit float big-endian</td><td>&gt;251</td><td>Any</td><td>Zoom position x (gets multiplied by App.assetScaling)</td></tr><tr><td>21-24</td><td>32-bit float big-endian</td><td>&gt;251</td><td>Any</td><td>Zoom position Y (gets multiplied by App.assetScaling)</td></tr><tr><td>25-28</td><td>32-bit signed int big-endian</td><td>&gt;251</td><td>Any</td><td>UV quality</td></tr><tr><td>29</td><td>8-bit unsigned byte</td><td>&gt;=300</td><td>Any</td><td>Only draw main nodes boolean</td></tr><tr><td>30</td><td>8-bit unsigned byte</td><td>&gt;=300</td><td>Any</td><td>Show figure IDs boolean</td></tr><tr><td>31</td><td>8-bit unsigned byte</td><td>&gt;251</td><td>Any</td><td>Onion skin is normal boolean</td></tr><tr><td>32</td><td>8-bit unsigned byte</td><td>&gt;251</td><td>Any</td><td>Is showing outline boolean</td></tr><tr><td>33</td><td>8-bit unsigned byte</td><td>&gt;=300</td><td>Any</td><td>Is showing outline creative boolean</td></tr><tr><td>34</td><td>8-bit unsigned byte</td><td>&gt;=310</td><td>Any</td><td>Is showing neighbor nodes boolean</td></tr><tr><td>35</td><td>8-bit unsigned byte</td><td>&gt;=310</td><td>Any</td><td>Is showing neighbor nodes creative boolean</td></tr><tr><td>36</td><td>8-bit unsigned byte</td><td>&gt;251</td><td>Any</td><td>Is showing guides boolean</td></tr></tbody></table>',97),n=[i];function o(s,l,h,c,b,p){return e(),d("div",null,n)}const f=t(r,[["render",o]]);export{g as __pageData,f as default};
